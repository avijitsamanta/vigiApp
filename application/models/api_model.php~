<?php class ApiModel extends CI_Model {

        public function __construct()
        {
                // Call the CI_Model constructor
                parent::__construct();
                $this->obj = new stdClass();
        }
		
		public function getRow($table='',$where=array())
        {
				
		$query = $this->db->get_where($table,$where);

		if($query->num_rows()>0)
		{
   			return $query->row(); 				
		}
		else
			return array();
            
        }

        public function getResults($table='',$where=array())
        {
				
			$query = $this->db->get_where($table,$where);

			if($query->num_rows()>0)
			{
	   			return $query->result_array(); 				
			}
			else
				return array();
            
        }

        

		public function getData($table='',$where=array())
        {
        	
			$query = $this->db->get_where($table,$where);
			//echo $this->db->last_query();exit;	

			if($query->num_rows()>0)
			{
	   			return $query->result_array(); 				
			}
			else
				return array();
            
        }

        public function getReviewData($table='',$where=array())
        {
        	$this->db->order_by('review_id','DESC');

        	$this->db->limit(5,0);
				
			$query = $this->db->get_where($table,$where);
			//echo $this->db->last_query();exit;	

			if($query->num_rows()>0)
			{
	   			return $query->result_array(); 				
			}
			else
				return array();
            
        }

		public function avg_review($table='',$where=array()) {

			$this->db->select('AVG(rating) as average_rating');

			$query = $this->db->get_where($table,$where);

			if($query->num_rows()>0)
			{
	   			$data_rating = $query->row_array(); 

	   			return $avg_rating = number_format($data_rating['average_rating'], 1,'.',',');
	   			
	   			//return $avg_rating = number_format($avg_rating, 1, '.', ',');


			}
			else
				return false;
			
		}

		public function count_total_review($table='',$where=array()) {

			$this->db->select('COUNT(*) as total_review');

			$query = $this->db->get_where($table,$where);

			if($query->num_rows()>0)
			{
	   			$result_review = $query->row_array();

	   			$total_review = $result_review['total_review'];

	   			return $total_review;
	   			
	   			//return $avg_rating = number_format($avg_rating, 1, '.', ',');


			}
			else
				return false;
			
		}


		public function count_total_wishlist($table='',$where=array()) {

			$this->db->select('COUNT(*) as total_wishlist');

			$query = $this->db->get_where($table,$where);

			if($query->num_rows()>0)
			{
	   			$result_wishlist = $query->row_array();

	   			$total_wishlist = $result_wishlist['total_wishlist'];

	   			return $total_wishlist;
	   			
	   			//return $avg_rating = number_format($avg_rating, 1, '.', ',');


			}
			else
				return false;
			
		}

        public function getAllReview($table='',$where=array())
        {
        	$this->db->order_by('review_id','DESC');


				
			$query = $this->db->get_where($table,$where);
			
			if($query->num_rows()>0)
			{
	   			return $query->result_array(); 				
			}
			else
				return array();
            
        }

       

        public function getOrderData($table='',$where=array(),$col_name,$order_by)
        {
			$this->db->order_by($col_name,$order_by);

			$query = $this->db->get_where($table,$where);

			if($query->num_rows()>0)
			{
	   			return $query->result_array(); 				
			}
			else
				return array();
            
        }

		
		public function addData($table='',$data=array())
		{
		      $this->db->insert($table, $data);

		      return $this->db->insert_id();
		     
		}

		public function addSize($table ='',$size=array(),$product_id)
		{
			for($i=0;$i<sizeof($size);$i++) 
			{
				$this->db->insert($table, array('product_id' => $product_id,'product_size_id' => $size[$i]));					
			}
		}

	  public function updateData($table = '',$where = array(),$data = array())
	  {
		
		$this->db->where($where);
		
		$this->db->update($table, $data); 
		//echo $this->db->last_query();
		return true;
		

	  }

	  public function DeleteData($table='',$where=array())
	  {
		$this->db->where($where);
		
		$this->db->delete($table); 

		if($this->db->affected_rows() > 0) 
		{
			return true;
		}
		else
			return false;

	  }

	  public function DeleteProductImage($table='',$where=array())
	  {

		$this->db->where($where);
		
		$this->db->delete($table); 

		if($this->db->affected_rows() > 0) 
		{
			return true;
		}
		else
			return false;
	  }
	  
	  public function addProductImages($table = '',$images = array(),$thumb_images = array(),$product_id)
	  {
	  		for($i=0;$i<sizeof($images);$i++) 
			{
				$this->db->insert($table, array('product_id' => $product_id,'product_image' => $images[$i],'product_thumb_image' => $thumb_images[$i]));					
			}
			return true;
	  }

		public function sendMail($table='',$where=array())
        {
				
			$query = $this->db->get_where($table,$where);

			$result = $query->result();

			if($query->num_rows()>0)
			{
	   			
				$to = $result[0]->email; // Send email to our user

				$subject = 'garment\'s Eye:Password'; // Give the email a subject 

				$message = 'Your account Details.
					 
				------------------------
				Username: '.$result[0]->email.'
				Password: '.$result[0]->password.'
				------------------------';

	                     
				$headers = 'From:noreply@yourwebsite.com' . "\r\n"; // Set from headers
					
				if(mail($to, $subject, $message, $headers))
					return 1;
				else
					return 2;
				
			}
			else
				return 0;
            
        }

	
   

    


   

    public function getColorList($table='',$where=array())
    {
    	$this->db->select('garment_product_color.color_code,garment_product_color.color_name');
		
		$this->db->from($table);

		$this->db->join('garment_product_color', $table.'.product_color_id = garment_product_color.color_id', 'left'); 

		$this->db->where($where);

		$query = $this->db->get();

		

		if($query->num_rows()>0)
		{
   			return $query->result_array(); 				
		}
		else
			return array();
    }

	





	

	

	public function getList($table,$where=array(),$userid)
	{
		$this->db->select('*');
		
		$this->db->from($table);

		$this->db->where($where);

		$query = $this->db->get();

			if($query->num_rows()>0)
			{
	   			foreach($query->result() as $row) //It will iterate only once or multiple times
	            {
					$this->db->select('garment_product.*,garment_brand.brand_name,garment_product_style.style,garment_product_color.color_code,garment_product_color.color_name,garment_product_size.size');

					$this->db->from('garment_product');

					$this->db->join('garment_brand', 'garment_product.brand_id = garment_brand.brand_id', 'left');

					$this->db->join('garment_product_style', 'garment_product.style_id = garment_product_style.style_id', 'left'); 

					$this->db->join('garment_product_color', 'garment_product.color_id = garment_product_color.color_id', 'left'); 

					$this->db->join('garment_product_size', 'garment_product.size_id = garment_product_size.product_size_id', 'left');

					$this->db->where('garment_product.product_id',$row->product_id);
					//$this->db->where('product_id',$row->product_id);

					$query2 = $this->db->get();					

					if($query2->num_rows()>0)
					{	
   						foreach($query2->result() as $row2) //It will iterate only once or multiple times
            			{

							//$query3 = $this->db->get_where('garment_users',array('userid'=>$row2->shop_id));

							//$result = $query3->row();
					

							//$row2->distance = distance($user_latitude,$user_longitude,$result->latitude,$result->longitude, "K");


							$query_wl = $this->db->get_where('garment_wishlist',array('user_id'=>$userid,'product_id'=>$row->product_id));

							if($query_wl->num_rows()>0)
							{
								$row2->wishlist_status = '1';
							}
							else
							{
								$row2->wishlist_status = '0';
							}
					
							$data[] = $row2;

						}
				
					}
					
				}
				

				return $data;				
						
			}			
			else
				return false;

	}

	public function addWishListData($table = '',$where = array())
	{
		$this->db->select('*');
		
		$this->db->from($table);

		$this->db->where($where);

		$query = $this->db->get();

		if($query->num_rows()==0)
		{
			$this->db->insert($table, $where);

	      	return $this->db->insert_id();
		}
		else
		{			
			$this->db->where($where);
      
			$this->db->delete($table); 

			return false;
		}		
	} 

	public function addCartListData($table = '',$where = array())
	{
		$this->db->select('*');
		
		$this->db->from($table);

		$this->db->where($where);

		$query = $this->db->get();

		if($query->num_rows()==0)
		{
			$this->db->insert($table, $where);

	      	return $this->db->insert_id();
		}
		else
		{			
			$this->db->where($where);
      
			$this->db->delete($table); 

			return false;
		}		
	} 
	
	public function updateQty($table = '',$where = array(),$qty)
	{
		$this->db->select('*');
		
		$this->db->from($table);

		$this->db->where($where);

		$query = $this->db->get();

		if($query->num_rows()>0)
		{
			$this->db->where($where);

			$this->db->set('quantity',$qty, FALSE);

			$this->db->update($table);

			//echo $this->db->last_query();exit;

			return true;
		}
		else
		{	
			return false;
		}		
	} 

	public function updateCart($table = '',$where = array(),$qty,$data=array())
	{
		$this->db->select('*');
		
		$this->db->from($table);

		$this->db->where($where);

		$query = $this->db->get();

		if($query->num_rows()>0)
		{
			$this->db->where($where);

			$this->db->set('quantity',$qty, FALSE);

			$this->db->update($table);

			//echo $this->db->last_query();

			return true;
		}
		else
		{	
			$this->db->insert($table, $data);

			//echo $this->db->last_query();

	      	return $this->db->insert_id();
			
		}		
	} 

	public function addReservedListData($table = '',$data = array(),$where=array())
	{
		$this->db->select('*');
		
		$this->db->from($table);

		$this->db->where($where);

		$query = $this->db->get();

		if($query->num_rows()==0)
		{
			$this->db->insert($table, $data);

			$this->db->last_query();

	      		return $this->db->insert_id();
		}
		else
		{			
			$this->db->where($data);
      
			$this->db->delete($table); 

			return false;
		}		
	} 

	

	public function addReview($table = '',$data=array(),$where = array())
	{

		$this->db->select('*');
		
		$this->db->from($table);

		$this->db->where($where);

		$query = $this->db->get();


		if($query->num_rows()==0)
		{
				$this->db->insert($table, $data);

	      		return $this->db->insert_id();
		}
		else
		{			
			$this->db->where($where);

			return $this->db->update($table, $data);
			
		}		
	
	}

	public function addProductView($table = '',$data=array(),$where = array(),$product_id)
	{

		$this->db->select('*');
		
		$this->db->from($table);

		$this->db->where($where);

		$query = $this->db->get();
		
		//echo $this->db->last_query();

		if($query->num_rows()==0)
		{
				$sql="UPDATE `garment_product` SET `view_count` = `view_count`+1 WHERE `product_id` = '$product_id'";

				$query = $this->db->query($sql);

				//$this->db->where('product_id',$product_id);

				//$this->db->update('garment_product', array('view_count' => 'view_count'+1));

				//echo $this->db->last_query(); 

				$this->db->insert($table, $data);

	      		return $this->db->insert_id();
	      		
		}
		else
		{			
			$this->db->where($where);

			$update = $this->db->update($table, array('view_time' => date('Y-m-d H:i:s')));

			//echo $this->db->last_query(); exit;
			
			return $update;
			
		}		
	
	}


	public function getProductSize($product_id='')
	{
		
		$this->db->select('garment_product_size.*');
		
		$this->db->from('garment_product_size');

		$this->db->join('garment_size', 'garment_product_size.product_size_id = garment_size.product_size_id', 'left'); 

		$this->db->where('garment_size.product_id',$product_id);

		$query = $this->db->get();

		if($query->num_rows()>0)
		{
	   		return $query->result();
		}
	
	}


	public function getNewShopProdList($table='',$where=array())
	{
		
		$this->db->select($table.'.*,garment_brand.brand_name');
		
		$this->db->from($table);

		$this->db->join('garment_brand', $table.'.brand_id = garment_brand.brand_id', 'left'); 

		$this->db->where($where);

		$this->db->order_by('product_id','desc');

		$this->db->limit('20');

		$query = $this->db->get();



		if($query->num_rows()>0)
		{
   			foreach($query->result() as $row) //It will iterate only once or multiple times
            {
				
				$data[] = $row;
			}
			
			return $data;
						
		}
		else
			return false;
	}


	public function getPopularProdList($table='',$where=array())
	{
		
		$this->db->select($table.'.*,garment_brand.brand_name');
		
		$this->db->from($table);

		$this->db->join('garment_brand', $table.'.brand_id = garment_brand.brand_id', 'left'); 

		//$this->db->join('shopper_product_views', $table.'.product_id = shopper_product_views.product_id', 'left'); 

		$this->db->where($where);

		$this->db->order_by($table.'.view_count','desc');

		$this->db->limit('10');

		$query = $this->db->get();



		if($query->num_rows()>0)
		{
   			foreach($query->result() as $row) //It will iterate only once or multiple times
            {
				
				$data[] = $row;
				
			}
			
			return $data;
						
		}
		else
			return false;
	}

	public function getOfferProdList($table='',$where=array())
	{

		$this->db->select($table.'.*,garment_brand.brand_name');
		
		$this->db->from($table);

		$this->db->join('garment_brand', $table.'.brand_id = garment_brand.brand_id', 'left'); 

		$this->db->where($where);

		$this->db->where('offer_percentage !=','0');

		$this->db->order_by($table.'.offer_added_date','desc');

		$query = $this->db->get();


		if($query->num_rows()>0)
		{
   			foreach($query->result() as $row) //It will iterate only once or multiple times
            		{
				
				$data[] = $row;
				
			}
			
			return $data;
						
		}
		else
			return false;
	}


	

 
}
?>

